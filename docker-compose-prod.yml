version: '3.8'

services:
  postgres:
    image: postgres:16.1-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME:-vitnode}
    ports:
      - '${DB_PORT:-5432}:${DB_PORT:-5432}'
    volumes:
      - ./docker/prod/database:/var/lib/postgresql/data
    networks:
      - vitnode

  redis:
    image: redis:7.2.4-alpine
    command: >
      --requirepass ${REDIS_PASSWORD}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT:-6379}
    ports:
      - '${REDIS_PORT:-6379}:${REDIS_PORT:-6379}'
    networks:
      - vitnode

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - DB_HOST=${REDIS_PORT:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-vitnode}
      - LOGIN_TOKEN_SECRET=${LOGIN_TOKEN_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}
    ports:
      - '8080:8080'
    depends_on:
      - postgres
      - redis
    networks:
      - vitnode
    volumes:
      - frontend_data:/frontend
      - ./backend/public:/app/public # for serving static files

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_GRAPHQL_URL=${NEXT_PUBLIC_GRAPHQL_URL}
        - NEXT_PUBLIC_CLIENT_GRAPHQL_URL=${NEXT_PUBLIC_CLIENT_GRAPHQL_URL:-}
    ports:
      - '80:3000'
    networks:
      - vitnode
    volumes:
      - frontend_data:/app

networks:
  vitnode:

volumes:
  frontend_data:
