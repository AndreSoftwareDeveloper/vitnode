// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model core_members {
  id                   String            @id @unique @db.VarChar(255)
  name                 String            @unique @db.VarChar(255)
  email                String            @unique @db.VarChar(255)
  password             String            @db.Text
  group                core_groups       @relation("core_members_group", references: [id], fields: [group_id])
  group_id             Int               @default(3)
  joined               Int
  birthday             Int
  avatar               core_attachments? @relation("core_members_avatar", fields: [avatar_id], references: [id])
  avatar_id            String?           @unique @db.VarChar(255)
  cover                core_attachments? @relation("core_members_cover", fields: [cover_id], references: [id])
  cover_id             String?           @unique @db.VarChar(255)
  posts                Int               @default(0)
  followers            Int               @default(0)
  reactions            Int               @default(0)
  newsletter           Boolean           @default(false)
  avatar_color         String            @db.VarChar(6)
  unread_notifications Int               @default(0)

  attachments    core_attachments[]    @relation("core_attachments_member")
  sessions       core_sessions[]       @relation("core_sessions_member")
  admin_sessions core_admin_sessions[] @relation("core_admin_sessions_member")
  admin_access   core_admin_access[]   @relation("core_admin_access_member")

  @@index([group_id])
}

model core_groups {
  id        Int                     @id @unique @default(autoincrement())
  name      core_groups_languages[] @relation("core_groups_languages_group")
  created   Int
  protected Boolean                 @default(false)

  members      core_members[]      @relation("core_members_group")
  admin_access core_admin_access[] @relation("core_admin_access_group")
}

model core_groups_languages {
  id          String @id @unique @default(uuid())
  id_language String @db.VarChar(32)
  group_id    Int
  name        String @db.VarChar(255)

  group    core_groups    @relation("core_groups_languages_group", references: [id], fields: [group_id])
  language core_languages @relation("core_groups_languages_language", references: [id], fields: [id_language])

  @@index([id_language])
}

model core_sessions {
  refresh_token        String       @id @unique @db.VarChar(255)
  access_token         String?      @unique @db.VarChar(255)
  member               core_members @relation("core_sessions_member", references: [id], fields: [member_id])
  member_id            String
  ip_address           String?      @db.VarChar(46)
  user_agent           String       @db.Text
  uagent_browser       String       @db.VarChar(200)
  uagent_version       String       @db.VarChar(100)
  uagent_os            String       @db.VarChar(100)
  uagent_device_vendor String?      @db.VarChar(200)
  uagent_device_type   String?      @db.VarChar(200)
  uagent_device_model  String?      @db.VarChar(200)
  last_seen            Int
  expires              Int

  @@index([member_id])
}

model core_admin_access {
  id          String        @id @unique @default(uuid())
  group       core_groups?  @relation("core_admin_access_group", references: [id], fields: [group_id])
  group_id    Int?
  member      core_members? @relation("core_admin_access_member", references: [id], fields: [member_id])
  member_id   String?
  permissions String        @db.Text
  created     Int
}

model core_admin_sessions {
  refresh_token        String       @id @unique @db.VarChar(255)
  access_token         String?      @unique @db.VarChar(255)
  member               core_members @relation("core_admin_sessions_member", references: [id], fields: [member_id])
  member_id            String
  ip_address           String?      @db.VarChar(46)
  user_agent           String       @db.Text
  uagent_browser       String       @db.VarChar(200)
  uagent_version       String       @db.VarChar(100)
  uagent_os            String       @db.VarChar(100)
  uagent_device_vendor String?      @db.VarChar(200)
  uagent_device_type   String?      @db.VarChar(200)
  uagent_device_model  String?      @db.VarChar(200)
  last_seen            Int
  expires              Int

  @@index([member_id])
}

model core_attachments {
  id          String       @id @default(uuid())
  extension   String       @db.VarChar(50)
  name        String       @db.VarChar(255)
  url         String       @db.VarChar(255)
  member      core_members @relation("core_attachments_member", references: [id], fields: [member_id])
  member_id   String
  created     Int
  file_size   Int
  position    Int
  description String?      @db.VarChar(255)
  module      String
  module_id   String
  mimetype    String

  members_with_avatar core_members[] @relation("core_members_avatar")
  members_with_cover  core_members[] @relation("core_members_cover")

  @@index([member_id])
}

model core_languages {
  id        String  @id @unique @db.VarChar(32)
  name      String  @db.VarChar(255)
  timezone  String  @default("UTC") @db.VarChar(255)
  protected Boolean @default(false)
  default   Boolean @default(false)
  enabled   Boolean @default(true)
  created   Int

  groups core_groups_languages[] @relation("core_groups_languages_language")
}
