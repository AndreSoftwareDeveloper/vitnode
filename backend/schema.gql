# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthorizationAdminSessionsObj {
  nav: [NavAdminPluginsAuthorization!]!
  user: AuthorizationCurrentUserObj
  version: String!
}

type AuthorizationCoreSessionsObj {
  files: FilesAuthorizationCoreSessions!
  plugin_default: String!
  user: AuthorizationCurrentUserObj
}

type AuthorizationCurrentUserObj {
  avatar: AvatarUser
  avatar_color: String!
  email: String!
  group: GroupUser!
  id: Int!
  is_admin: Boolean!
  is_mod: Boolean!
  name: String!
  name_seo: String!
  newsletter: Boolean!
}

type AvatarUser {
  dir_folder: String!
  file_name: String!
  id: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type EditAdminSettingsObj {
  site_copyright: [TextLanguage!]!
  site_description: [TextLanguage!]!
  site_name: String!
}

type FilesAdminPluginsObj {
  admin_pages: Int!
  admin_templates: Int!
  databases: Int!
  default_page: Boolean!
  graphql_mutations: Int!
  graphql_queries: Int!
  hooks: Int!
  language: Boolean!
  pages: Int!
  pages_container: Int!
  templates: Int!
}

type FilesAuthorizationCoreSessions {
  allow_upload: Boolean!
  max_storage_for_submit: Int!
  space_used: Int!
  total_max_storage: Int!
}

type GroupUser {
  id: Int!
  name: [TextLanguage!]!
}

type ItemNavAdminPluginsAuthorization {
  code: String!
  href: String!
  icon: String
}

enum LayoutAdminInstallEnum {
  ACCOUNT
  DATABASE
  FINISH
}

type LayoutAdminInstallObj {
  status: LayoutAdminInstallEnum!
}

type Mutation {
  admin__core_main_settings__edit(site_copyright: [TextLanguageInput!]!, site_description: [TextLanguageInput!]!, site_name: String!, site_short_name: String!): EditAdminSettingsObj!
  admin__core_manifest_metadata__edit(background_color: String!, display: String!, start_url: String!, theme_color: String!): ShowAdminManifestMetadataObj!
  admin__core_plugins__create(author: String!, author_url: String, code: String!, description: String, name: String!, support_url: String!): ShowAdminPlugins!
  admin__core_plugins__delete(code: String!): String!
  admin__core_plugins__download(code: String!, version: String, version_code: Int): String!
  admin__core_plugins__edit(author: String!, author_url: String, code: String!, default: Boolean, description: String, enabled: Boolean, name: String!, support_url: String!): ShowAdminPlugins!
  admin__core_plugins__nav__change_position(id: Int!, index_to_move: Int!): String!
  admin__core_plugins__nav__create(code: String!, href: String!, icon: String, plugin_code: String!): ShowAdminNavPluginsObj!
  admin__core_plugins__nav__delete(id: Int!): String!
  admin__core_plugins__nav__edit(code: String!, href: String!, icon: String, id: Int!): ShowAdminNavPluginsObj!
  admin__core_plugins__upload(code: String, file: Upload!): ShowAdminPlugins!
  admin__core_themes__create(author: String!, author_url: String, name: String!, support_url: String!): ShowAdminThemes!
  admin__core_themes__delete(id: Int!): String!
  admin__core_themes__download(id: Int!, version: String, version_code: Int): String!
  admin__core_themes__edit(author: String!, author_url: String, id: Int!, name: String!, support_url: String!): ShowAdminThemes!
  admin__core_themes__upload(file: Upload!, id: Int): ShowAdminThemes!
  admin__install__create_database: String!
  admin_sessions__sign_out: String!
  core_sessions__sign_in(admin: Boolean, email: String!, password: String!, remember: Boolean): String!
  core_sessions__sign_out: String!
}

type NavAdminPluginsAuthorization {
  code: String!
  nav: [ItemNavAdminPluginsAuthorization!]!
}

type PageInfo {
  count: Float!
  endCursor: Int
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: Int
  totalCount: Float!
}

type Query {
  admin__core_manifest_metadata__show: ShowAdminManifestMetadataObj!
  admin__core_plugins__files(code: String!): FilesAdminPluginsObj!
  admin__core_plugins__nav__show(plugin_code: String!): [ShowAdminNavPluginsObj!]!
  admin__core_plugins__show(code: String, cursor: Int, first: Int, last: Int, search: String, sortBy: ShowAdminPluginsSortByArgs): ShowAdminPluginsObj!
  admin__core_themes__show(cursor: Int, first: Int, last: Int, sortBy: ShowAdminThemesSortByArgs): ShowAdminThemesObj!
  admin__install__layout: LayoutAdminInstallObj!
  admin__sessions__authorization: AuthorizationAdminSessionsObj!
  core_sessions__authorization: AuthorizationCoreSessionsObj!
  core_settings__show: ShowSettingsObj!
  core_test__test: String!
}

type ShowAdminManifestMetadataObj {
  background_color: String!
  display: String!
  id: String!
  lang: String!
  start_url: String!
  theme_color: String!
}

type ShowAdminNavPluginsObj {
  code: String!
  href: String!
  icon: String
  id: Int!
  position: Int!
}

type ShowAdminPlugins {
  allow_default: Boolean!
  author: String!
  author_url: String
  code: String!
  created: DateTime!
  default: Boolean!
  description: String
  enabled: Boolean!
  id: Int!
  name: String!
  support_url: String!
  updated: DateTime!
  version: String
  version_code: Int
}

type ShowAdminPluginsObj {
  edges: [ShowAdminPlugins!]!
  pageInfo: PageInfo!
}

input ShowAdminPluginsSortByArgs {
  column: ShowAdminPluginsSortingColumnEnum!
  direction: SortDirectionEnum!
}

enum ShowAdminPluginsSortingColumnEnum {
  created
  updated
}

type ShowAdminThemes {
  author: String!
  author_url: String
  created: DateTime!
  default: Boolean!
  id: Int!
  name: String!
  protected: Boolean!
  support_url: String!
  version: String
  version_code: Int
}

type ShowAdminThemesObj {
  edges: [ShowAdminThemes!]!
  pageInfo: PageInfo!
}

input ShowAdminThemesSortByArgs {
  column: ShowAdminThemesSortingColumnEnum!
  direction: SortDirectionEnum!
}

enum ShowAdminThemesSortingColumnEnum {
  created
}

type ShowCoreSessionDevices {
  device_id: Int!
  expires: DateTime!
  last_seen: DateTime!
  login_token: String!
  user_id: Int!
}

type ShowSettingsObj {
  site_copyright: [TextLanguage!]!
  site_description: [TextLanguage!]!
  site_name: String!
  site_short_name: String!
  theme_id: Float
}

enum SortDirectionEnum {
  asc
  desc
}

type TextLanguage {
  language_code: String!
  value: String!
}

input TextLanguageInput {
  language_code: String!
  value: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload